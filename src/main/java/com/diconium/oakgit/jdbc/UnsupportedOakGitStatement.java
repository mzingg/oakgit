package com.diconium.oakgit.jdbc;

import java.sql.ResultSet;
import java.sql.SQLWarning;
import java.sql.Statement;

public abstract class UnsupportedOakGitStatement implements Statement {

    public int executeUpdate(String sql) {
        throw new UnsupportedOperationException();
    }

    public int getMaxFieldSize() {
        throw new UnsupportedOperationException();
    }

    public void setMaxFieldSize(int max) {
        throw new UnsupportedOperationException();
    }

    public int getMaxRows() {
        throw new UnsupportedOperationException();
    }

    public void setMaxRows(int max) {
        throw new UnsupportedOperationException();
    }

    public void setEscapeProcessing(boolean enable) {
        throw new UnsupportedOperationException();
    }

    public int getQueryTimeout() {
        throw new UnsupportedOperationException();
    }

    public void setQueryTimeout(int seconds) {
        throw new UnsupportedOperationException();
    }

    public void cancel() {
        throw new UnsupportedOperationException();
    }

    public SQLWarning getWarnings() {
        throw new UnsupportedOperationException();
    }

    public void clearWarnings() {
        throw new UnsupportedOperationException();
    }

    public void setCursorName(String name) {
        throw new UnsupportedOperationException();
    }

    public int getUpdateCount() {
        throw new UnsupportedOperationException();
    }

    public boolean getMoreResults() {
        throw new UnsupportedOperationException();
    }

    public void setFetchDirection(int direction) {
        throw new UnsupportedOperationException();
    }

    public int getFetchDirection() {
        throw new UnsupportedOperationException();
    }

    public void setFetchSize(int rows) {
        throw new UnsupportedOperationException();
    }

    public int getFetchSize() {
        throw new UnsupportedOperationException();
    }

    public int getResultSetConcurrency() {
        throw new UnsupportedOperationException();
    }

    public int getResultSetType() {
        throw new UnsupportedOperationException();
    }

    public void addBatch(String sql) {
        throw new UnsupportedOperationException();
    }

    public void clearBatch() {
        throw new UnsupportedOperationException();
    }

    public int[] executeBatch() {
        throw new UnsupportedOperationException();
    }

    public boolean getMoreResults(int current) {
        throw new UnsupportedOperationException();
    }

    public ResultSet getGeneratedKeys() {
        throw new UnsupportedOperationException();
    }

    public int executeUpdate(String sql, int autoGeneratedKeys) {
        throw new UnsupportedOperationException();
    }

    public int executeUpdate(String sql, int[] columnIndexes) {
        throw new UnsupportedOperationException();
    }

    public int executeUpdate(String sql, String[] columnNames) {
        throw new UnsupportedOperationException();
    }

    public boolean execute(String sql, int autoGeneratedKeys) {
        throw new UnsupportedOperationException();
    }

    public boolean execute(String sql, int[] columnIndexes) {
        throw new UnsupportedOperationException();
    }

    public boolean execute(String sql, String[] columnNames) {
        throw new UnsupportedOperationException();
    }

    public int getResultSetHoldability() {
        throw new UnsupportedOperationException();
    }

    public boolean isClosed() {
        throw new UnsupportedOperationException();
    }

    public void setPoolable(boolean poolable) {
        throw new UnsupportedOperationException();
    }

    public boolean isPoolable() {
        throw new UnsupportedOperationException();
    }

    public void closeOnCompletion() {
        throw new UnsupportedOperationException();
    }

    public boolean isCloseOnCompletion() {
        throw new UnsupportedOperationException();
    }

    public <T> T unwrap(Class<T> iface) {
        throw new UnsupportedOperationException();
    }

    public boolean isWrapperFor(Class<?> iface) {
        throw new UnsupportedOperationException();
    }

    public ResultSet getResultSet() {
        throw new UnsupportedOperationException();
    }
}
